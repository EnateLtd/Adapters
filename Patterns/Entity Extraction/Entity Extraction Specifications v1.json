{
    "openapi": "3.0.1",
  "info": {
    "title": "Entity Extraction Specifications",
    "description": "The specification of the contract between the Enate Entity Extraction API an Adapter that communicates with a third-party technology.",
    "version": "v1"
  },
    "servers": [
      {
        "url": "https://enatedigitalworker.azure-api.net/EntityExtractionPattern/v1"
      }
    ],
  "paths": {
    "/TestConfiguration": {
      "post": {
        "summary": "Test Configuration",
        "description": "Tests that the configuration is valid and can be used to communicate with the third-party technology.",
        "operationId": "testAdapterConfiguration",
        "requestBody": {
          "description": "Configuration details to test.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdapterConfigurationEntryResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Test was successful.",
            "content": {
              "application/json": {
                "example": "True"
              }
            }
          },
          "400": {
            "description": "The request has not been completed because it contains invalid data."
          },
          "401": {
            "description": "The client request has not been completed because it lacks valid authentication credentials for the requested resource."
          },
          "500": {
            "description": "Request Failed due to internal server error."
          }
        }
      }
    },
    "/EntityExtraction": {
      "post": {
        "summary": "Entity Extraction of Emails",
        "description": "Send communication for Entity Extraction.",
        "operationId": "entityExtraction",
        "requestBody": {
          "description": "Communication details for Entity Extraction.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailDetailsForEntityExtraction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Extracted entities from the communication.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityExtractionResult"
                }
              }
            }
          },
          "400": {
            "description": "The request has not been completed because it contains invalid data."
          },
          "401": {
            "description": "The client request has not been completed because it lacks valid authentication credentials for the requested resource."
          },
          "500": {
            "description": "The request failed due to internal server error."
          }
        }
      }
    }
  },
    "components": {
      "schemas": {
        "AdapterConfigurationEntryResult": {
          "required": [
            "Name",
            "Value"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Name of the Configuration field."
            },
            "Value": {
              "type": "object",
              "description": "Value of the Configuration field."
            }
          },
          "example": [
            {
              "Name": "Url",
              "Value": "http://test"
            },
            {
              "Name": "APIKey",
              "Value": "MyAPIKeyValue"
            }
          ]
        },
        "EmailDetailsForEntityExtraction": {
          "required": [
            "AdapterId",
            "ConfigurationId",
            "PacketGuid",
            "Subject",
            "Body",
            "Categories",
            "DataFields"
          ],
          "type": "object",
          "properties": {
            "AdapterId": {
              "type": "string",
              "description": "The unique ID of the Adapter.",
              "format": "uuid"
            },
            "ConfigurationId": {
              "type": "string",
              "description": "The unique ID of the Configuration.",
              "format": "uuid"
            },
            "PacketGuid": {
              "type": "string",
              "description": "The unique ID of the Packet.",
              "format": "uuid"
            },
            "Subject": {
              "type": "string",
              "description": "Subject of the communication."
            },
            "Categories": {
              "type": "string",
              "description": "Categories of the Packet."
            },
            "Body": {
              "type": "string",
              "description": "Body of the communication."
            },
            "DataFields": {
              "type": "object",
              "description": "List of data fields.",
              "additionalProperties": true
            },
            "EnateInstance": {
              "$ref": "#/components/schemas/EnateIdentityResult"
            }
          },
          "example": {
            "AdapterId": "c3ca0ced-d4fd-4eee-a96d-7a2c3350a052",
            "ConfigurationId": "d45f53fe-bba5-49af-9a36-6423d10b429d",
            "PacketGuid": "AE395CEB-9DC5-466F-9D7E-424408AE76AB",
            "Subject": "test",
            "Body": "Thank you very much for your help. It is appreciated.",
            "Categories": "Life_Insurance_Policy",
            "DataFields": {
              "field1": "value1",
              "field2": "value2",
              "field3": "value3"
            },
            "EnateInstance": {
              "EnateID": "2c0c1a54-b793-454f-b27d-2b89b83c0795",
              "Name": "Test",
              "Subject": "CN=test",
              "Url": "https://samltesting2/",
              "EnateIdentityCertificateName": "test"
            }
          }
        },
        "EntityExtractionResult": {
          "required": [
            "PacketGuid",
            "ExtractionResult"
          ],
          "type": "object",
          "properties": {
            "PacketGuid": {
              "type": "string",
              "description": "The unique ID of the packet.",
              "format": "uuid"
            },
            "ExtractionResult": {
              "type": "object",
              "description": "ExpandoObject representing the Extraction Result",
              "additionalProperties": true
            }
          },
          "example": {
            "PacketGuid": "92958610-0D15-487D-A2AA-7293171BD95E",
            "ExtractionResult": {
              "example_key": {
                "example_property": "example_value"
              }
            }
          }
        },
        "EnateIdentityResult": {
          "required": [
            "EnateID",
            "Subject",
            "URL",
            "EnateIdentityCertificateName"
          ],
          "type": "object",
          "properties": {
            "EnateID": {
              "type": "string",
              "description": "The unique ID of the instance.",
              "format": "uuid"
            },
            "Name": {
              "type": "string",
              "description": "Name of the instance."
            },
            "Subject": {
              "type": "string",
              "description": "Subject of the instance."
            },
            "URL": {
              "type": "string",
              "description": "Url of the instance."
            },
            "EnateIdentityCertificateName": {
              "type": "string",
              "description": "Certificate Nanme of the instance."
            }
          },
          "example": {
            "EnateID": "2c0c1a54-b793-454f-b27d-2b89b83c0795",
            "Name": "Test",
            "Subject": "CN=test",
            "Url": "https://samltesting2/",
            "EnateIdentityCertificateName": "test"
          }
        }

      },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "Ocp-Apim-Subscription-Key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "subscription-key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}